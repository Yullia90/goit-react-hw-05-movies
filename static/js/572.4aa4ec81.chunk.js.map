{"version":3,"file":"static/js/572.4aa4ec81.chunk.js","mappings":"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","sources":["KEY/movieKey.js","components/Loading/FadingLoaderCard.styled.jsx","components/Loading/FadingLoaderCard.jsx","components/Utils/checkPoster.js","components/Utils/formattingOverview.js","components/API/seachMoviesApi.js","components/Main/SearchMoviesItems.styled.jsx","components/Main/SearchMoviesItems.jsx","components/Error/badRequestFromUser.js","components/Error/errorEmptyInput.js","pages/movies/Movies.styled.jsx","pages/movies/Movies.jsx"],"sourcesContent":["export const API_KEY = '738904a13b3909d077f36b36e666274e';","import styled from '@emotion/styled';\n\nimport ContentLoader from 'react-content-loader';\n\nexport const WrapperFadingLoader = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding-top: 20px;\n  width: 800px;\n  margin: 0 auto;\n`;\n\nexport const ContentLoaderSt = styled(ContentLoader)`\n  margin-bottom: 18px;\n  /* margin-left: 50%; */\n  border: 1px solid rgba(227, 227, 227, 1);\n  background-color: #fff;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  width: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  border-radius: 8px;\n`;\n","import React from 'react';\n// import ContentLoader from 'react-content-loader';\nimport {\n  WrapperFadingLoader,\n  ContentLoaderSt,\n} from './FadingLoaderCard.styled';\n\nconst FadingLoader = () => {\n  return (\n    <WrapperFadingLoader>\n      <FadingLoaderCard1 />\n      <FadingLoaderCard2 />\n      <FadingLoaderCard3 />\n      <FadingLoaderCard4 />\n      <FadingLoaderCard5 />\n    </WrapperFadingLoader>\n  );\n};\n\nconst FadingLoaderCard1 = () => {\n  return (\n    <ContentLoaderSt\n      width={600}\n      height={140}\n      backgroundColor=\"#ababab\"\n      foregroundColor=\"#fafafa\"\n    >\n      <rect x=\"120\" y=\"15\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n      <rect x=\"120\" y=\"69\" rx=\"5\" ry=\"5\" width=\"420\" height=\"9\" />\n      <rect x=\"20\" y=\"10\" rx=\"0\" ry=\"0\" width=\"90\" height=\"100\" />\n    </ContentLoaderSt>\n  );\n};\n\nconst FadingLoaderCard2 = () => {\n  return (\n    <ContentLoaderSt\n      width={500}\n      height={140}\n      backgroundColor=\"#bfbfbf\"\n      foregroundColor=\"#fafafa\"\n    >\n      <rect x=\"120\" y=\"15\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n      <rect x=\"120\" y=\"69\" rx=\"5\" ry=\"5\" width=\"420\" height=\"9\" />\n      <rect x=\"20\" y=\"10\" rx=\"0\" ry=\"0\" width=\"90\" height=\"100\" />\n    </ContentLoaderSt>\n  );\n};\n\nconst FadingLoaderCard3 = () => {\n  return (\n    <ContentLoaderSt\n      width={500}\n      height={140}\n      backgroundColor=\"#dadada\"\n      foregroundColor=\"#fafafa\"\n    >\n      <rect x=\"120\" y=\"15\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n      <rect x=\"120\" y=\"69\" rx=\"5\" ry=\"5\" width=\"420\" height=\"9\" />\n      <rect x=\"20\" y=\"10\" rx=\"0\" ry=\"0\" width=\"90\" height=\"100\" />\n    </ContentLoaderSt>\n  );\n};\n\nconst FadingLoaderCard4 = () => {\n  return (\n    <ContentLoaderSt\n      width={500}\n      height={140}\n      backgroundColor=\"#ececec\"\n      foregroundColor=\"#fafafa\"\n    >\n      <rect x=\"120\" y=\"15\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n      <rect x=\"120\" y=\"69\" rx=\"5\" ry=\"5\" width=\"420\" height=\"9\" />\n      <rect x=\"20\" y=\"10\" rx=\"0\" ry=\"0\" width=\"90\" height=\"100\" />\n    </ContentLoaderSt>\n  );\n};\n\nconst FadingLoaderCard5 = () => {\n  return (\n    <ContentLoaderSt\n      width={500}\n      height={140}\n      backgroundColor=\"#f7f7f7\"\n      foregroundColor=\"#fafafa\"\n    >\n      <rect x=\"120\" y=\"15\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n      <rect x=\"120\" y=\"69\" rx=\"5\" ry=\"5\" width=\"420\" height=\"9\" />\n      <rect x=\"20\" y=\"10\" rx=\"0\" ry=\"0\" width=\"90\" height=\"100\" />\n    </ContentLoaderSt>\n  );\n};\n\nFadingLoader.metadata = {\n  name: 'Nikhil Anand', // My name\n  github: 'anandnkhl', // Github username\n  description: 'Loader that fades downwards', // Little tagline\n  filename: 'FadingLoader', // filename of your loader\n};\n\nexport default FadingLoader;\n","import defaultPoster from '../Image/no-poster-available.jpg';\n\nconst checkPoster = img => {\n  if (!img) {\n    return defaultPoster;\n  }\n  return `https://image.tmdb.org/t/p/w500${img}`;\n};\n\nexport default checkPoster;\n","const formattingOverview = text => {\n  let newFormat = text;\n  if (newFormat.length > 80) {\n    newFormat = text.slice(0, 90) + '...';\n  }\n  return newFormat;\n};\n\nexport default formattingOverview;\n","import { API_KEY } from \"../../KEY/movieKey\";\nimport axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n\nconst fetchSearchMoviesApi = async search => {\n    const response = await axios.get(BASE_URL, {\n\n        params: {\n            api_key: API_KEY,\n            query: search,\n        },\n    });\n    return response.data;\n};\nexport default fetchSearchMoviesApi;","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  /* padding-top: 15px; */\n`;\n\nexport const Title = styled.h1`\n  margin: 0;\n\n  padding-bottom: 10px;\n  font-size: 30px;\n  line-height: 26px;\n  font-weight: 700;\n  letter-spacing: 0.5px;\n  text-align: center;\n  border-bottom: 1px solid rgba(139, 139, 139, 0.346);\n`;\n\nexport const ContentWrapper = styled.div`\n  /* border: 2px solid rgb(0, 13, 255); */\n  padding-top: 15px;\n  display: flex;\n  background-color: #7a7a7a25;\n\n  justify-content: center;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: calc(100vw - 82px);\n  width: 800px;\n`;\n\nexport const Li = styled.li`\n  margin-bottom: 18px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  border-radius: 8px;\n\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(227, 227, 227, 1);\n  background-color: #fff;\n  overflow: hidden;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  :hover,\n  :focus {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  min-width: 94px;\n\n  width: 94px;\n  height: 141px;\n`;\n\nexport const ImgCards = styled.img`\n  min-width: 100%;\n  width: 100%;\n  height: 100%;\n  outline: none;\n  display: block;\n`;\n\nexport const TitleWrapper = styled.div`\n  padding: 10px 15px;\n`;\n\nexport const TitleCards = styled.h2`\n  color: #000000;\n  padding-top: 10px;\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 700;\n  font-weight: bold;\n  margin: 0;\n`;\n\nexport const OverviewCards = styled.p`\n  color: #000000;\n  padding-top: 25px;\n  margin: 0;\n\n  font-weight: normal;\n`;\n\nexport const Release = styled.span`\n  color: #999;\n  font-size: 12px;\n`;\n\nexport const LinkSt = styled(Link)`\n  text-decoration: none;\n  display: flex;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport checkPoster from 'components/Utils/checkPoster';\nimport formattingOverview from 'components/Utils/formattingOverview';\n\nimport {\n  ContentWrapper,\n  ImgCards,\n  ImgWrapper,\n  Li,\n  LinkSt,\n  OverviewCards,\n  Release,\n  TitleCards,\n  TitleWrapper,\n  Ul,\n} from './SearchMoviesItems.styled';\n\nconst SearchMoviesItems = ({ queryResultItems }) => {\n  const location = useLocation();\n  if (!queryResultItems) {\n    return;\n  }\n\n  return (\n    <ContentWrapper>\n      <Ul>\n        {queryResultItems.map(\n          ({ id, title, poster_path, overview, release_date }) => (\n            <Li key={id}>\n              <LinkSt to={`${id}`} state={{ from: location }}>\n                <ImgWrapper>\n                  <ImgCards src={checkPoster(poster_path)} alt={title} />\n                </ImgWrapper>\n                <TitleWrapper>\n                  <TitleCards>{title}</TitleCards>\n                  <Release>{release_date}</Release>\n                  <OverviewCards>{formattingOverview(overview)}</OverviewCards>\n                </TitleWrapper>\n              </LinkSt>\n            </Li>\n          )\n        )}\n      </Ul>\n    </ContentWrapper>\n  );\n};\nexport default SearchMoviesItems;\n\nSearchMoviesItems.propTypes = {\n  queryResultItems: PropTypes.array.isRequired,\n};\n","import { Report } from \"notiflix/build/notiflix-aio\";\n\nconst badRequestFromUser = text => {\n    Report.failure(\n        \"Warning!!!\",\n        `The query ${text} did not find anything. <br/><br/>\n        Please try again!\"`,\n        \"Okay\"\n    );\n};\n\nReport.init({\n    titleFontSize: \"28px\",\n});\nexport default badRequestFromUser;","import { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nconst errorEmptyInput = () => {\n  return Notify.failure(\n    'Oops. The search field must not be empty. Enter your request.'\n  );\n};\n\nNotify.init({\n  width: '450px',\n  distance: '20px',\n  position: 'center-top',\n  timeout: 2000,\n});\n\nexport default errorEmptyInput;","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormsSt = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n\n  border-radius: 20px;\n  overflow: hidden;\n  margin: 0 auto;\n  padding-left: 5px;\n`;\n\nexport const Input = styled(Field)`\n  display: inline-block;\n\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 36px;\n  height: 36px;\n  border: 0;\n  background-image: url('https://www.svgrepo.com/show/511119/search-magnifying-glass.svg');\n  background-size: 60%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background-color: #fff;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const ContainerForm = styled.div`\n  border-bottom: 2px solid rgb(181, 181, 181);\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\n\nimport fetchSearchMovies from 'components/API/seachMoviesApi';\n\nimport SearchMoviesItems from '../../components/Main/SearchMoviesItems';\nimport FadingLoader from 'components/Loading/FadingLoaderCard';\n\nimport badRequestFromUser from 'components/Error/badRequestFromUser';\nimport errorEmptyInput from 'components/Error/errorEmptyInput';\n\nimport { Button, ContainerForm, FormsSt, Input } from './Movies.styled';\n\nconst Movies = () => {\n  const [queryResult, setQueryResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const queryMovies = searchParams.get('query') ?? '';\n\n  const handleSubmit = ({ values }, actions) => {\n    if (values.trim() === '') {\n      errorEmptyInput();\n      return;\n    }\n\n    setSearchParams({ query: values });\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!queryMovies) {\n      return;\n    }\n\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const { results } = await fetchSearchMovies(queryMovies);\n\n        if (results.length === 0) {\n          setError(badRequestFromUser(queryMovies));\n\n          return;\n        }\n        setQueryResult(results);\n      } catch {\n        setError(true);\n        navigate('/error', { replace: true });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [navigate, queryMovies, setSearchParams]);\n\n  return (\n    <>\n      <ContainerForm>\n        <Formik initialValues={{ values: queryMovies }} onSubmit={handleSubmit}>\n          <FormsSt>\n            <Button type=\"submit\"></Button>\n            <Input\n              name=\"values\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Find a movie\"\n            />\n          </FormsSt>\n        </Formik>\n      </ContainerForm>\n      {isLoading && <FadingLoader />}\n\n      {!error && !isLoading && queryResult && (\n        <SearchMoviesItems queryResultItems={queryResult} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","WrapperFadingLoader","styled","ContentLoaderSt","ContentLoader","FadingLoader","FadingLoaderCard1","FadingLoaderCard2","FadingLoaderCard3","FadingLoaderCard4","FadingLoaderCard5","width","height","backgroundColor","foregroundColor","x","y","rx","ry","metadata","name","github","description","filename","img","defaultPoster","text","newFormat","length","slice","fetchSearchMoviesApi","search","axios","params","api_key","query","response","data","ContentWrapper","Ul","Li","ImgWrapper","ImgCards","TitleWrapper","TitleCards","OverviewCards","Release","LinkSt","Link","queryResultItems","location","useLocation","map","id","title","poster_path","overview","release_date","to","state","from","src","checkPoster","alt","formattingOverview","Report","titleFontSize","Notify","distance","position","timeout","FormsSt","Form","Input","Field","Button","ContainerForm","useState","queryResult","setQueryResult","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","navigate","useNavigate","queryMovies","get","useEffect","fetchData","fetchSearchMovies","results","badRequestFromUser","replace","initialValues","values","onSubmit","actions","trim","setSubmitting","errorEmptyInput","type","autoComplete","autoFocus","placeholder"],"sourceRoot":""}